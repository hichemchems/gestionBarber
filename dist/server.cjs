"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const E=require("express"),oe=require("cors"),ne=require("helmet"),ie=require("cookie-parser"),le=require("express-rate-limit"),ce=require("express-fileupload"),de=require("csurf"),n=require("express-validator"),G=require("path"),ue=require("dotenv"),s=require("sequelize"),q=require("jsonwebtoken");require("jwt-decode");const J=require("swagger-ui-express"),pe=require("swagger-jsdoc");require("bcryptjs");const Y={};ue.config();const ye={url:process.env.SERVER_URL||`http://localhost:${process.env.PORT||3e3}`,host:process.env.HOST||"0.0.0.0",port:process.env.PORT||3e3,secure:process.env.SECURE||!1,cors:process.env.CORS||""},me={dialect:process.env.DATABASE_DIALECT||"mysql",database:process.env.DATABASE_DBNAME,user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,host:process.env.DATABASE_HOST,port:process.env.DATABASE_PORT,ssl:process.env.DATABASE_SSL||!1},fe={accessToken:{type:process.env.ACCESS_TOKEN_TYPE||"Bearer",algorithm:process.env.ACCESS_TOKEN_ALGORITHM||"HS256",secret:process.env.ACCESS_TOKEN_SECRET||"Acc3ssTok3nS3c3t!",expiresIn:process.env.ACCESS_TOKEN_EXPIRES_IN_MS||3600*1e3,audience:process.env.ACCESS_TOKEN_AUDIENCE||"my_backend_api",issuer:process.env.ACCESS_TOKEN_ISSUER||"my_authentication_server"},crypto:{scrypt:{saltLength:process.env.SCRYPT_SALT_LENGTH||16,hashLength:process.env.SCRYPT_HASH_LENGTH||64,cost:process.env.SCRYPT_COST||Math.pow(2,17),blockSize:process.env.SCRYPT_BLOCK_SIZE||8,parallelization:process.env.SCRYPT_PARALLELIZATION||1,maxmem:process.env.SCRYPT_MAXMEM|134220800},unsaltedHashAlgorithm:process.env.FAST_HASH_ALGORITHM||"sha256"}},b={auth:fe,database:me,server:ye},j=new s.Sequelize(b.database.database,b.database.user,b.database.password,{host:b.database.host,port:b.database.port,dialect:b.database.dialect,ssl:b.database.ssl,logging:!1,define:{timestamps:!0,underscored:!0}}),g=j.define("User",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},username:{type:s.DataTypes.STRING,allowNull:!1,unique:!0},email:{type:s.DataTypes.STRING,allowNull:!1,unique:!0,validate:{isEmail:!0}},passwordHash:{type:s.DataTypes.STRING,allowNull:!1},role:{type:s.DataTypes.ENUM("superAdmin","admin","user"),defaultValue:"user"},avatar:{type:s.DataTypes.STRING,allowNull:!0},isActive:{type:s.DataTypes.BOOLEAN,defaultValue:!0}},{tableName:"users"}),c=j.define("Employee",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},userId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"users",key:"id"}},name:{type:s.DataTypes.STRING,allowNull:!1},position:{type:s.DataTypes.STRING,allowNull:!1},hireDate:{type:s.DataTypes.DATE,allowNull:!1},deductionPercentage:{type:s.DataTypes.DECIMAL(5,2),defaultValue:0},contract:{type:s.DataTypes.STRING,allowNull:!0},employmentDeclaration:{type:s.DataTypes.STRING,allowNull:!0},certification:{type:s.DataTypes.STRING,allowNull:!0}},{tableName:"employees"}),N=j.define("Package",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},name:{type:s.DataTypes.STRING,allowNull:!1},price:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},isActive:{type:s.DataTypes.BOOLEAN,defaultValue:!0}},{tableName:"packages"}),I=j.define("Sale",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},employeeId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"employees",key:"id"}},packageId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"packages",key:"id"}},clientName:{type:s.DataTypes.STRING,allowNull:!1},amount:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},date:{type:s.DataTypes.DATE,defaultValue:s.DataTypes.NOW},description:{type:s.DataTypes.TEXT,allowNull:!0}},{tableName:"sales"}),v=j.define("Receipt",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},employeeId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"employees",key:"id"}},clientName:{type:s.DataTypes.STRING,allowNull:!1},amount:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},date:{type:s.DataTypes.DATE,defaultValue:s.DataTypes.NOW},description:{type:s.DataTypes.TEXT,allowNull:!0}},{tableName:"receipts"}),O=j.define("Expense",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},category:{type:s.DataTypes.STRING,allowNull:!1},amount:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},date:{type:s.DataTypes.DATE,defaultValue:s.DataTypes.NOW},description:{type:s.DataTypes.TEXT,allowNull:!0},createdBy:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"users",key:"id"}}},{tableName:"expenses"}),K=j.define("Salary",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},employeeId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"employees",key:"id"}},baseSalary:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},commissionPercentage:{type:s.DataTypes.DECIMAL(5,2),defaultValue:0},totalSalary:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},periodStart:{type:s.DataTypes.DATE,allowNull:!1},periodEnd:{type:s.DataTypes.DATE,allowNull:!1}},{tableName:"salaries"}),L=j.define("AdminCharge",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},rent:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},charges:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},operatingCosts:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},electricity:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},salaries:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},totalCharges:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},month:{type:s.DataTypes.INTEGER,allowNull:!1},year:{type:s.DataTypes.INTEGER,allowNull:!1}},{tableName:"admin_charges"}),ee=j.define("Goal",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},employeeId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"employees",key:"id"}},monthlyObjective:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},dailyObjective:{type:s.DataTypes.DECIMAL(10,2),allowNull:!1},month:{type:s.DataTypes.INTEGER,allowNull:!1},year:{type:s.DataTypes.INTEGER,allowNull:!1},remainingAmount:{type:s.DataTypes.DECIMAL(10,2),defaultValue:0},isCompleted:{type:s.DataTypes.BOOLEAN,defaultValue:!1}},{tableName:"goals"}),ae=j.define("Alert",{id:{type:s.DataTypes.INTEGER,primaryKey:!0,autoIncrement:!0},employeeId:{type:s.DataTypes.INTEGER,allowNull:!1,references:{model:"employees",key:"id"}},message:{type:s.DataTypes.TEXT,allowNull:!1},type:{type:s.DataTypes.ENUM("daily","monthly","warning"),defaultValue:"daily"},isRead:{type:s.DataTypes.BOOLEAN,defaultValue:!1},date:{type:s.DataTypes.DATE,defaultValue:s.DataTypes.NOW}},{tableName:"alerts"});g.hasOne(c,{foreignKey:"userId",as:"employee"});g.hasMany(O,{foreignKey:"createdBy",as:"expenses"});c.belongsTo(g,{foreignKey:"userId",as:"user"});c.hasMany(I,{foreignKey:"employeeId",as:"sales"});c.hasMany(v,{foreignKey:"employeeId",as:"receipts"});c.hasMany(K,{foreignKey:"employeeId",as:"salaries"});c.hasMany(ee,{foreignKey:"employeeId",as:"goals"});c.hasMany(ae,{foreignKey:"employeeId",as:"alerts"});N.hasMany(I,{foreignKey:"packageId",as:"sales"});I.belongsTo(c,{foreignKey:"employeeId",as:"employee"});I.belongsTo(N,{foreignKey:"packageId",as:"package"});v.belongsTo(c,{foreignKey:"employeeId",as:"employee"});O.belongsTo(g,{foreignKey:"createdBy",as:"creator"});K.belongsTo(c,{foreignKey:"employeeId",as:"employee"});ee.belongsTo(c,{foreignKey:"employeeId",as:"employee"});ae.belongsTo(c,{foreignKey:"employeeId",as:"employee"});const{accessToken:C}=b.auth;function te(t){return q.sign(t,C.secret,{algorithm:C.algorithm,expiresIn:C.expiresIn,audience:C.audience,issuer:C.issuer})}function he(t){try{return q.verify(t,C.secret,{algorithms:[C.algorithm],audience:C.audience,issuer:C.issuer})}catch(a){return console.error("JWT verification failed:",a.message),null}}const{scrypt:S}=b.auth.crypto;async function re(t){const a=Y.randomBytes(S.saltLength).toString("hex"),e=Y.scryptSync(t,a,S.hashLength,{N:S.cost,r:S.blockSize,p:S.parallelization,maxmem:S.maxmem}).toString("hex");return`${a}:${e}`}async function ge(t,a){const[e,o]=a.split(":"),r=Y.scryptSync(t,e,S.hashLength,{N:S.cost,r:S.blockSize,p:S.parallelization,maxmem:S.maxmem}).toString("hex");return o===r}const $=E.Router();$.post("/register",[n.body("username").isLength({min:3}).trim().escape(),n.body("email").isEmail().normalizeEmail(),n.body("password").isLength({min:14}).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/),n.body("role").optional().isIn(["superAdmin","admin","user"])],h,async(t,a)=>{try{const{username:e,email:o,password:r,role:i="user"}=t.body;if(await g.findOne({where:{email:o}}))return a.status(400).json({error:"User already exists"});const p=await re(r),y=await g.create({username:e,email:o,passwordHash:p,role:i}),w=te({id:y.id,username:y.username,email:y.email,role:y.role});a.status(201).json({message:"User registered successfully",user:{id:y.id,username:y.username,email:y.email,role:y.role},token:w})}catch(e){console.error("Registration error:",e),a.status(500).json({error:"Internal server error"})}});$.post("/login",[n.body("email").isEmail().normalizeEmail(),n.body("password").notEmpty()],h,async(t,a)=>{try{const{email:e,password:o}=t.body,r=await g.findOne({where:{email:e}});if(!r)return a.status(401).json({error:"Invalid credentials"});if(!await ge(o,r.passwordHash))return a.status(401).json({error:"Invalid credentials"});const l=te({id:r.id,username:r.username,email:r.email,role:r.role});a.cookie("accessToken",l,{httpOnly:!0,secure:process.env.NODE_ENV==="production",maxAge:3600*1e3}),a.json({message:"Login successful",user:{id:r.id,username:r.username,email:r.email,role:r.role},token:l})}catch(e){console.error("Login error:",e),a.status(500).json({error:"Internal server error"})}});$.post("/logout",(t,a)=>{a.clearCookie("accessToken"),a.json({message:"Logout successful"})});$.get("/me",d,async(t,a)=>{try{const e=await g.findByPk(t.user.id,{include:[{model:c,as:"employee"}]});if(!e)return a.status(404).json({error:"User not found"});a.json({user:{id:e.id,username:e.username,email:e.email,role:e.role,avatar:e.avatar,employee:e.employee}})}catch(e){console.error("Get profile error:",e),a.status(500).json({error:"Internal server error"})}});const U=E.Router();U.get("/",d,f(["admin","superAdmin"]),async(t,a)=>{try{const e=await g.findAll({include:[{model:c,as:"employee"}],attributes:{exclude:["passwordHash"]}});a.json({users:e})}catch(e){console.error("Get users error:",e),a.status(500).json({error:"Internal server error"})}});U.post("/",d,f(["admin","superAdmin"]),[n.body("username").isLength({min:3}).trim().escape(),n.body("email").isEmail().normalizeEmail(),n.body("password").isLength({min:14}).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/),n.body("name").notEmpty().trim().escape(),n.body("position").notEmpty().trim().escape(),n.body("hireDate").isISO8601(),n.body("deductionPercentage").optional().isFloat({min:0,max:100})],h,async(t,a)=>{try{const{username:e,email:o,password:r,name:i,position:l,hireDate:p,deductionPercentage:y=0}=t.body;if(await g.findOne({where:{email:o}}))return a.status(400).json({error:"User already exists"});const T=await re(r);let R=null,k=null,x=null,M=null;if(t.files){const B=G.join(process.cwd(),"uploads");if(t.files.avatar){const u=t.files.avatar;R=`avatar_${Date.now()}_${u.name}`,await u.mv(G.join(B,R))}if(t.files.contract){const u=t.files.contract;k=`contract_${Date.now()}_${u.name}`,await u.mv(G.join(B,k))}if(t.files.employmentDeclaration){const u=t.files.employmentDeclaration;x=`employment_declaration_${Date.now()}_${u.name}`,await u.mv(G.join(B,x))}if(t.files.certification){const u=t.files.certification;M=`certification_${Date.now()}_${u.name}`,await u.mv(G.join(B,M))}}const D=await g.create({username:e,email:o,passwordHash:T,role:"user",avatar:R}),_=await c.create({userId:D.id,name:i,position:l,hireDate:p,deductionPercentage:y,contract:k,employmentDeclaration:x,certification:M});a.status(201).json({message:"User created successfully",user:{id:D.id,username:D.username,email:D.email,role:D.role,avatar:D.avatar,employee:_}})}catch(e){console.error("Create user error:",e),a.status(500).json({error:"Internal server error"})}});U.put("/:id",d,f(["admin","superAdmin"]),[n.body("username").optional().isLength({min:3}).trim().escape(),n.body("email").optional().isEmail().normalizeEmail(),n.body("role").optional().isIn(["superAdmin","admin","user"]),n.body("isActive").optional().isBoolean()],h,async(t,a)=>{try{const{id:e}=t.params,o=t.body,r=await g.findByPk(e);if(!r)return a.status(404).json({error:"User not found"});await r.update(o),a.json({message:"User updated successfully",user:{id:r.id,username:r.username,email:r.email,role:r.role,isActive:r.isActive}})}catch(e){console.error("Update user error:",e),a.status(500).json({error:"Internal server error"})}});U.put("/:id/deduction-percentage",d,f(["admin","superAdmin"]),[n.body("deductionPercentage").isFloat({min:0,max:100})],h,async(t,a)=>{try{const{id:e}=t.params,{deductionPercentage:o}=t.body,r=await c.findOne({where:{userId:e}});if(!r)return a.status(404).json({error:"Employee not found"});await r.update({deductionPercentage:o}),a.json({message:"Deduction percentage updated successfully",employee:{id:r.id,userId:r.userId,deductionPercentage:r.deductionPercentage}})}catch(e){console.error("Update deduction percentage error:",e),a.status(500).json({error:"Internal server error"})}});U.delete("/:id",d,f(["superAdmin"]),async(t,a)=>{try{const{id:e}=t.params,o=await g.findByPk(e);if(!o)return a.status(404).json({error:"User not found"});await o.destroy(),a.json({message:"User deleted successfully"})}catch(e){console.error("Delete user error:",e),a.status(500).json({error:"Internal server error"})}});const F=E.Router();F.get("/",d,async(t,a)=>{try{const e=await N.findAll({where:{isActive:!0},order:[["name","ASC"]]});a.json({packages:e})}catch(e){console.error("Get packages error:",e),a.status(500).json({error:"Internal server error"})}});F.post("/",d,f(["admin","superAdmin"]),[n.body("name").notEmpty().trim().escape(),n.body("price").isFloat({min:0})],h,async(t,a)=>{try{const{name:e,price:o}=t.body,r=await N.create({name:e,price:o});a.status(201).json({message:"Package created successfully",package:r})}catch(e){console.error("Create package error:",e),a.status(500).json({error:"Internal server error"})}});F.put("/:id",d,f(["admin","superAdmin"]),[n.body("name").optional().notEmpty().trim().escape(),n.body("price").optional().isFloat({min:0}),n.body("isActive").optional().isBoolean()],h,async(t,a)=>{try{const{id:e}=t.params,o=t.body,r=await N.findByPk(e);if(!r)return a.status(404).json({error:"Package not found"});await r.update(o),a.json({message:"Package updated successfully",package:r})}catch(e){console.error("Update package error:",e),a.status(500).json({error:"Internal server error"})}});F.delete("/:id",d,f(["admin","superAdmin"]),async(t,a)=>{try{const{id:e}=t.params,o=await N.findByPk(e);if(!o)return a.status(404).json({error:"Package not found"});await o.update({isActive:!1}),a.json({message:"Package deactivated successfully"})}catch(e){console.error("Delete package error:",e),a.status(500).json({error:"Internal server error"})}});const V=E.Router();V.get("/employee/:employeeId",d,async(t,a)=>{try{const{employeeId:e}=t.params;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const r=await c.findOne({where:{userId:t.user.id}});if(!r||r.id!=e)return a.status(403).json({error:"Access denied"})}const o=await I.findAll({where:{employeeId:e},include:[{model:N,as:"package"},{model:c,as:"employee",include:[{model:User,as:"user"}]}],order:[["date","DESC"]]});a.json({sales:o})}catch(e){console.error("Get sales error:",e),a.status(500).json({error:"Internal server error"})}});V.post("/employee/:employeeId",d,[n.body("packageId").isInt({min:1}),n.body("clientName").notEmpty().trim().escape(),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{employeeId:e}=t.params,{packageId:o,clientName:r,description:i}=t.body;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const T=await c.findOne({where:{userId:t.user.id}});if(!T||T.id!=e)return a.status(403).json({error:"Access denied"})}if(!await c.findByPk(e))return a.status(404).json({error:"Employee not found"});const p=await N.findOne({where:{id:o,isActive:!0}});if(!p)return a.status(404).json({error:"Package not found or inactive"});const y=await I.create({employeeId:e,packageId:o,clientName:r,amount:p.price,description:i}),w=await I.findByPk(y.id,{include:[{model:N,as:"package"},{model:c,as:"employee",include:[{model:User,as:"user"}]}]});a.status(201).json({message:"Sale created successfully",sale:w})}catch(e){console.error("Create sale error:",e),a.status(500).json({error:"Internal server error"})}});V.put("/employee/:employeeId/sale/:saleId",d,[n.body("clientName").optional().notEmpty().trim().escape(),n.body("amount").optional().isFloat({min:0}),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{employeeId:e,saleId:o}=t.params,r=t.body;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const p=await c.findOne({where:{userId:t.user.id}});if(!p||p.id!=e)return a.status(403).json({error:"Access denied"})}const i=await I.findOne({where:{id:o,employeeId:e}});if(!i)return a.status(404).json({error:"Sale not found"});await i.update(r);const l=await I.findByPk(o,{include:[{model:N,as:"package"},{model:c,as:"employee",include:[{model:User,as:"user"}]}]});a.json({message:"Sale updated successfully",sale:l})}catch(e){console.error("Update sale error:",e),a.status(500).json({error:"Internal server error"})}});V.delete("/employee/:employeeId/sale/:saleId",d,async(t,a)=>{try{const{employeeId:e,saleId:o}=t.params;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const i=await c.findOne({where:{userId:t.user.id}});if(!i||i.id!=e)return a.status(403).json({error:"Access denied"})}const r=await I.findOne({where:{id:o,employeeId:e}});if(!r)return a.status(404).json({error:"Sale not found"});await r.destroy(),a.json({message:"Sale deleted successfully"})}catch(e){console.error("Delete sale error:",e),a.status(500).json({error:"Internal server error"})}});const z=E.Router();z.get("/employee/:employeeId",d,async(t,a)=>{try{const{employeeId:e}=t.params;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const r=await c.findOne({where:{userId:t.user.id}});if(!r||r.id!=e)return a.status(403).json({error:"Access denied"})}const o=await v.findAll({where:{employeeId:e},include:[{model:c,as:"employee",include:[{model:User,as:"user"}]}],order:[["date","DESC"]]});a.json({receipts:o})}catch(e){console.error("Get receipts error:",e),a.status(500).json({error:"Internal server error"})}});z.post("/employee/:employeeId",d,[n.body("clientName").notEmpty().trim().escape(),n.body("amount").isFloat({min:0}),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{employeeId:e}=t.params,{clientName:o,amount:r,description:i}=t.body;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const w=await c.findOne({where:{userId:t.user.id}});if(!w||w.id!=e)return a.status(403).json({error:"Access denied"})}if(!await c.findByPk(e))return a.status(404).json({error:"Employee not found"});const p=await v.create({employeeId:e,clientName:o,amount:r,description:i}),y=await v.findByPk(p.id,{include:[{model:c,as:"employee",include:[{model:User,as:"user"}]}]});a.status(201).json({message:"Receipt added successfully",receipt:y})}catch(e){console.error("Add receipt error:",e),a.status(500).json({error:"Internal server error"})}});z.put("/employee/:employeeId/receipt/:receiptId",d,[n.body("clientName").optional().notEmpty().trim().escape(),n.body("amount").optional().isFloat({min:0}),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{employeeId:e,receiptId:o}=t.params,r=t.body;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const p=await c.findOne({where:{userId:t.user.id}});if(!p||p.id!=e)return a.status(403).json({error:"Access denied"})}const i=await v.findOne({where:{id:o,employeeId:e}});if(!i)return a.status(404).json({error:"Receipt not found"});await i.update(r);const l=await v.findByPk(o,{include:[{model:c,as:"employee",include:[{model:User,as:"user"}]}]});a.json({message:"Receipt updated successfully",receipt:l})}catch(e){console.error("Update receipt error:",e),a.status(500).json({error:"Internal server error"})}});z.delete("/employee/:employeeId/receipt/:receiptId",d,async(t,a)=>{try{const{employeeId:e,receiptId:o}=t.params;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const i=await c.findOne({where:{userId:t.user.id}});if(!i||i.id!=e)return a.status(403).json({error:"Access denied"})}const r=await v.findOne({where:{id:o,employeeId:e}});if(!r)return a.status(404).json({error:"Receipt not found"});await r.destroy(),a.json({message:"Receipt deleted successfully"})}catch(e){console.error("Delete receipt error:",e),a.status(500).json({error:"Internal server error"})}});const H=E.Router();H.get("/",d,f(["admin","superAdmin"]),async(t,a)=>{try{const e=await O.findAll({include:[{model:g,as:"creator"}],order:[["date","DESC"]]});a.json({expenses:e})}catch(e){console.error("Get expenses error:",e),a.status(500).json({error:"Internal server error"})}});H.post("/",d,[n.body("category").notEmpty().trim().escape(),n.body("amount").isFloat({min:0}),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{category:e,amount:o,description:r}=t.body,i=await O.create({category:e,amount:o,description:r,createdBy:t.user.id}),l=await O.findByPk(i.id,{include:[{model:g,as:"creator"}]});a.status(201).json({message:"Expense created successfully",expense:l})}catch(e){console.error("Create expense error:",e),a.status(500).json({error:"Internal server error"})}});H.put("/:id",d,[n.body("category").optional().notEmpty().trim().escape(),n.body("amount").optional().isFloat({min:0}),n.body("description").optional().trim().escape()],h,async(t,a)=>{try{const{id:e}=t.params,o=t.body,r=await O.findByPk(e);if(!r)return a.status(404).json({error:"Expense not found"});if(t.user.role!=="superAdmin"&&t.user.role!=="admin"&&r.createdBy!==t.user.id)return a.status(403).json({error:"Access denied"});await r.update(o);const i=await O.findByPk(e,{include:[{model:g,as:"creator"}]});a.json({message:"Expense updated successfully",expense:i})}catch(e){console.error("Update expense error:",e),a.status(500).json({error:"Internal server error"})}});H.delete("/:id",d,async(t,a)=>{try{const{id:e}=t.params,o=await O.findByPk(e);if(!o)return a.status(404).json({error:"Expense not found"});if(t.user.role!=="superAdmin"&&t.user.role!=="admin"&&o.createdBy!==t.user.id)return a.status(403).json({error:"Access denied"});await o.destroy(),a.json({message:"Expense deleted successfully"})}catch(e){console.error("Delete expense error:",e),a.status(500).json({error:"Internal server error"})}});const X=E.Router();X.get("/employee/:employeeId",d,async(t,a)=>{try{const{employeeId:e}=t.params;if(t.user.role!=="superAdmin"&&t.user.role!=="admin"){const r=await c.findOne({where:{userId:t.user.id}});if(!r||r.id!=e)return a.status(403).json({error:"Access denied"})}const o=await K.findAll({where:{employeeId:e},include:[{model:c,as:"employee"}],order:[["periodEnd","DESC"]]});a.json({salaries:o})}catch(e){console.error("Get salaries error:",e),a.status(500).json({error:"Internal server error"})}});X.post("/generate",d,f(["admin","superAdmin"]),[n.body("periodStart").isISO8601(),n.body("periodEnd").isISO8601()],h,async(t,a)=>{try{const{periodStart:e,periodEnd:o}=t.body,r=await c.findAll(),i=[];for(const l of r){const y=(await v.findAll({where:{employeeId:l.id,date:{[s.Op.between]:[e,o]}}})).reduce((D,_)=>D+parseFloat(_.amount),0),T=(await I.findAll({where:{employeeId:l.id,date:{[s.Op.between]:[e,o]}}})).reduce((D,_)=>D+parseFloat(_.amount),0),R=await L.findOne({where:{month:new Date(e).getMonth()+1,year:new Date(e).getFullYear()}}),k=(y+T)*(l.deductionPercentage/100),x=y+T-k,M=await K.create({employeeId:l.id,baseSalary:y+T,commissionPercentage:l.deductionPercentage,totalSalary:Math.max(0,x),periodStart:e,periodEnd:o});i.push(M)}a.status(201).json({message:"Salaries generated successfully",salaries:i})}catch(e){console.error("Generate salaries error:",e),a.status(500).json({error:"Internal server error"})}});const W=E.Router();W.get("/",d,f(["admin","superAdmin"]),async(t,a)=>{try{const e=await L.findAll({order:[["year","DESC"],["month","DESC"]]});a.json({adminCharges:e})}catch(e){console.error("Get admin charges error:",e),a.status(500).json({error:"Internal server error"})}});W.post("/",d,f(["admin","superAdmin"]),[n.body("month").isInt({min:1,max:12}),n.body("year").isInt({min:2020}),n.body("amount").isFloat({min:0})],h,async(t,a)=>{try{const{month:e,year:o,amount:r}=t.body;if(await L.findOne({where:{month:e,year:o}}))return a.status(400).json({error:"Admin charge already exists for this month/year"});const l=await L.create({month:e,year:o,amount:r});a.status(201).json({message:"Admin charge created successfully",adminCharge:l})}catch(e){console.error("Create admin charge error:",e),a.status(500).json({error:"Internal server error"})}});W.put("/:id",d,f(["admin","superAdmin"]),[n.body("amount").isFloat({min:0})],h,async(t,a)=>{try{const{id:e}=t.params,{amount:o}=t.body,r=await L.findByPk(e);if(!r)return a.status(404).json({error:"Admin charge not found"});await r.update({amount:o}),a.json({message:"Admin charge updated successfully",adminCharge:r})}catch(e){console.error("Update admin charge error:",e),a.status(500).json({error:"Internal server error"})}});W.delete("/:id",d,f(["admin","superAdmin"]),async(t,a)=>{try{const{id:e}=t.params,o=await L.findByPk(e);if(!o)return a.status(404).json({error:"Admin charge not found"});await o.destroy(),a.json({message:"Admin charge deleted successfully"})}catch(e){console.error("Delete admin charge error:",e),a.status(500).json({error:"Internal server error"})}});const Z=E.Router();Z.get("/dashboard",d,f(["admin","superAdmin"]),async(t,a)=>{try{const e=new Date,o=e.getMonth()+1,r=e.getFullYear(),i=new Date(r,o-1,1),l=new Date(r,o,0),p=await I.sum("amount",{where:{date:{[s.Op.between]:[i,l]}}})||0,y=await v.sum("amount",{where:{date:{[s.Op.between]:[i,l]}}})||0,w=await O.sum("amount",{where:{date:{[s.Op.between]:[i,l]}}})||0,T=await K.sum("totalSalary",{where:{periodStart:{[s.Op.between]:[i,l]}}})||0,R=await L.findOne({where:{month:o,year:r}}),k=R?parseFloat(R.amount):0,x=p+y-w-T-k,D=(await c.findAll({include:[{model:I,as:"sales",where:{date:{[s.Op.between]:[i,l]}},required:!1},{model:v,as:"receipts",where:{date:{[s.Op.between]:[i,l]}},required:!1}],attributes:["id","name"]})).map(u=>({id:u.id,name:u.name,totalSales:u.sales.reduce((A,P)=>A+parseFloat(P.amount),0),totalReceipts:u.receipts.reduce((A,P)=>A+parseFloat(P.amount),0),total:u.sales.reduce((A,P)=>A+parseFloat(P.amount),0)+u.receipts.reduce((A,P)=>A+parseFloat(P.amount),0)})).sort((u,A)=>A.total-u.total).slice(0,5),B=(await N.findAll({include:[{model:I,as:"sales",where:{date:{[s.Op.between]:[i,l]}},required:!1}],attributes:["id","name","price"]})).map(u=>({id:u.id,name:u.name,price:u.price,salesCount:u.sales.length,totalRevenue:u.sales.reduce((A,P)=>A+parseFloat(P.amount),0)})).sort((u,A)=>A.salesCount-u.salesCount).slice(0,5);a.json({currentMonth:{totalSales:p,totalReceipts:y,totalExpenses:w,totalSalaries:T,totalAdminCharges:k,netProfit:x},employeePerformance:D,popularPackages:B})}catch(e){console.error("Get dashboard analytics error:",e),a.status(500).json({error:"Internal server error"})}});Z.get("/revenue",d,f(["admin","superAdmin"]),async(t,a)=>{try{const e=parseInt(t.query.months)||12,o=[];for(let r=e-1;r>=0;r--){const i=new Date;i.setMonth(i.getMonth()-r);const l=i.getMonth()+1,p=i.getFullYear(),y=new Date(p,l-1,1),w=new Date(p,l,0),T=await I.sum("amount",{where:{date:{[s.Op.between]:[y,w]}}})||0,R=await v.sum("amount",{where:{date:{[s.Op.between]:[y,w]}}})||0,k=await O.sum("amount",{where:{date:{[s.Op.between]:[y,w]}}})||0;o.push({month:`${p}-${l.toString().padStart(2,"0")}`,sales:T,receipts:R,expenses:k,totalRevenue:T+R})}a.json({revenue:o})}catch(e){console.error("Get revenue analytics error:",e),a.status(500).json({error:"Internal server error"})}});typeof PhusionPassenger<"u"&&PhusionPassenger.configure({autoInstall:!1});const m=E();m.use(ne({contentSecurityPolicy:{directives:{defaultSrc:["'self'"],styleSrc:["'self'","'unsafe-inline'"],scriptSrc:["'self'"],imgSrc:["'self'","data:","https:"]}}}));const we=le({windowMs:900*1e3,max:100,message:"Too many requests from this IP, please try again later."});m.use(we);m.use(oe({origin:b.server.cors,credentials:!0}));m.use(E.urlencoded({extended:!0}));m.use(E.json({limit:"10mb"}));m.use(ce({limits:{fileSize:5*1024*1024},abortOnLimit:!0}));m.use(ie());m.use(de({cookie:!0}));m.use("/uploads",E.static("uploads"));const se=G.join(process.cwd(),"..","frontend","dist");m.use(E.static(se));j.authenticate().then(()=>console.log("Database connected successfully.")).catch(t=>console.error("Database connection failed:",t));const{url:Q}=b.server,Ie={swaggerDefinition:{openapi:"3.0.0",info:{title:"EasyGestion API",version:"1.0.0",description:"API pour la gestion d'un salon de coiffure"},servers:[{url:Q,description:`API Serveur - ${Q}`}],components:{securitySchemes:{bearerAuth:{type:"http",scheme:"bearer",bearerFormat:"JWT"}}},security:[{bearerAuth:[]}]},apis:["./src/routes/*.js"]},Te=pe(Ie);m.use("/api-docs",J.serve,J.setup(Te));m.use("/api/v1/auth",$);m.use("/api/v1/users",U);m.use("/api/v1/packages",F);m.use("/api/v1/sales",V);m.use("/api/v1/receipts",z);m.use("/api/v1/expenses",H);m.use("/api/v1/salaries",X);m.use("/api/v1/admin-charges",W);m.use("/api/v1/analytics",Z);m.get("/health",(t,a)=>{a.status(200).json({status:"OK",timestamp:new Date().toISOString()})});m.get("*",(t,a)=>{t.path.startsWith("/api")?a.status(404).json({error:"API endpoint not found"}):a.sendFile(G.join(se,"index.html"))});m.use((t,a,e,o)=>{console.error(t.stack),e.status(500).json({error:"Something went wrong!"})});if(typeof PhusionPassenger<"u")m.listen("passenger");else{const{port:t,host:a}=b.server;m.listen(t,a,()=>{console.log(`🚀 Server listening on http://${a}:${t}`)})}function d(t,a,e){var i,l,p;const o=((l=(i=t.headers)==null?void 0:i.authorization)==null?void 0:l.split("Bearer ")[1])||((p=t.cookies)==null?void 0:p.accessToken);if(!o)return a.status(401).json({status:401,message:"No access token provided"});const r=he(o);if(!r)return a.status(401).json({status:401,message:"Invalid access token"});t.user=r,t.accessToken=o,e()}function f(t){return(a,e,o)=>{if(!a.user||!t.includes(a.user.role))return e.status(403).json({status:403,message:"Insufficient permissions"});o()}}function h(t){return async(a,e,o)=>{for(let i of t)if((await i.run(a)).errors.length)break;const r=n.validationResult(a);if(!r.isEmpty())return e.status(400).json({errors:r.array()});o()}}exports.isAuthenticated=d;exports.requireRole=f;exports.validateRequest=h;
